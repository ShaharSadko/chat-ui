// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src/components/presentional/Message should render correctly 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <Message
    message={
        Object {
            "avatar": "avatar",
            "isOwner": true,
            "text": "text",
            "username": "shahar",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "message": Object {
        "avatar": "avatar",
        "isOwner": true,
        "text": "text",
        "username": "shahar",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": <li
        class="chatMessage"
>
        <div
                class="ui image label"
        >
                <img
                        alt="user Avatar"
                />
                <span
                        class="userName"
                />
                : 
        </div>
</li>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Label
          image={true}
>
          <img
                    alt="user Avatar"
                    src={undefined}
          />
          <span
                    className="userName"
          />
          : 
</Label>,
        "className": "chatMessage",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": Label {
            "_reactInternalFiber": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "message": Object {
                        "avatar": "avatar",
                        "isOwner": true,
                        "text": "text",
                        "username": "shahar",
                      },
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "message": Object {
                        "avatar": "avatar",
                        "isOwner": true,
                        "text": "text",
                        "username": "shahar",
                      },
                    },
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <li
                                                    class="chatMessage"
                          >
                                                    <div
                                                                              class="ui image label"
                                                    >
                                                                              <img
                                                                                                        alt="user Avatar"
                                                                              />
                                                                              <span
                                                                                                        class="userName"
                                                                              />
                                                                              : 
                                                    </div>
                          </li>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "message": Object {
                                                                                            "avatar": "avatar",
                                                                                            "isOwner": true,
                                                                                            "text": "text",
                                                                                            "username": "shahar",
                                                                                          },
                                                                                        }
                              }
/>,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "message": Object {
                                                                                            "avatar": "avatar",
                                                                                            "isOwner": true,
                                                                                            "text": "text",
                                                                                            "username": "shahar",
                                                                                          },
                                                                                        }
                              }
/>,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "message": Object {
                                                                          "avatar": "avatar",
                                                                          "isOwner": true,
                                                                          "text": "text",
                                                                          "username": "shahar",
                                                                        },
                                                                      }
                        }
/>,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <li
                                                class="chatMessage"
                        >
                                                <div
                                                                        class="ui image label"
                                                >
                                                                        <img
                                                                                                alt="user Avatar"
                                                                        />
                                                                        <span
                                                                                                class="userName"
                                                                        />
                                                                        : 
                                                </div>
                        </li>
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "E:\\\\demo-chat-boilerplate\\\\src\\\\components\\\\presentional\\\\Message.jsx",
                    "lineNumber": 9,
                  },
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <Label
                      image={true}
>
                      <img
                                            alt="user Avatar"
                                            src={undefined}
                      />
                      <span
                                            className="userName"
                      />
                      : 
</Label>,
                    "className": "chatMessage",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <li
                    class="chatMessage"
>
                    <div
                                        class="ui image label"
                    >
                                        <img
                                                            alt="user Avatar"
                                        />
                                        <span
                                                            class="userName"
                                        />
                                        : 
                    </div>
</li>,
                  "tag": 5,
                  "type": "li",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "message": Object {
                    "avatar": "avatar",
                    "isOwner": true,
                    "text": "text",
                    "username": "shahar",
                  },
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "message": Object {
                        "avatar": "avatar",
                        "isOwner": true,
                        "text": "text",
                        "username": "shahar",
                      },
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "message": Object {
                        "avatar": "avatar",
                        "isOwner": true,
                        "text": "text",
                        "username": "shahar",
                      },
                    },
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <li
                                                    class="chatMessage"
                          >
                                                    <div
                                                                              class="ui image label"
                                                    >
                                                                              <img
                                                                                                        alt="user Avatar"
                                                                              />
                                                                              <span
                                                                                                        class="userName"
                                                                              />
                                                                              : 
                                                    </div>
                          </li>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "message": Object {
                                                                                            "avatar": "avatar",
                                                                                            "isOwner": true,
                                                                                            "text": "text",
                                                                                            "username": "shahar",
                                                                                          },
                                                                                        }
                              }
/>,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "message": Object {
                                                                                            "avatar": "avatar",
                                                                                            "isOwner": true,
                                                                                            "text": "text",
                                                                                            "username": "shahar",
                                                                                          },
                                                                                        }
                              }
/>,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "message": Object {
                                                                          "avatar": "avatar",
                                                                          "isOwner": true,
                                                                          "text": "text",
                                                                          "username": "shahar",
                                                                        },
                                                                      }
                        }
/>,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <li
                                                class="chatMessage"
                        >
                                                <div
                                                                        class="ui image label"
                                                >
                                                                        <img
                                                                                                alt="user Avatar"
                                                                        />
                                                                        <span
                                                                                                class="userName"
                                                                        />
                                                                        : 
                                                </div>
                        </li>
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": null,
                "tag": 1,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": Object {
                "fileName": "E:\\\\demo-chat-boilerplate\\\\src\\\\components\\\\presentional\\\\Message.jsx",
                "lineNumber": 10,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <li
                                                            class="chatMessage"
                              >
                                                            <div
                                                                                          class="ui image label"
                                                            >
                                                                                          <img
                                                                                                                        alt="user Avatar"
                                                                                          />
                                                                                          <span
                                                                                                                        class="userName"
                                                                                          />
                                                                                          : 
                                                            </div>
                              </li>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "message": Object {
                                                                                                        "avatar": "avatar",
                                                                                                        "isOwner": true,
                                                                                                        "text": "text",
                                                                                                        "username": "shahar",
                                                                                                      },
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "message": Object {
                                                                                                        "avatar": "avatar",
                                                                                                        "isOwner": true,
                                                                                                        "text": "text",
                                                                                                        "username": "shahar",
                                                                                                      },
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "message": Object {
                                                                                      "avatar": "avatar",
                                                                                      "isOwner": true,
                                                                                      "text": "text",
                                                                                      "username": "shahar",
                                                                                    },
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <li
                                                        class="chatMessage"
                            >
                                                        <div
                                                                                    class="ui image label"
                                                        >
                                                                                    <img
                                                                                                                alt="user Avatar"
                                                                                    />
                                                                                    <span
                                                                                                                class="userName"
                                                                                    />
                                                                                    : 
                                                        </div>
                            </li>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "E:\\\\demo-chat-boilerplate\\\\src\\\\components\\\\presentional\\\\Message.jsx",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <Label
                          image={true}
>
                          <img
                                                    alt="user Avatar"
                                                    src={undefined}
                          />
                          <span
                                                    className="userName"
                          />
                          : 
</Label>,
                        "className": "chatMessage",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <li
                        class="chatMessage"
>
                        <div
                                                class="ui image label"
                        >
                                                <img
                                                                        alt="user Avatar"
                                                />
                                                <span
                                                                        class="userName"
                                                />
                                                : 
                        </div>
</li>,
                      "tag": 5,
                      "type": "li",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "message": Object {
                        "avatar": "avatar",
                        "isOwner": true,
                        "text": "text",
                        "username": "shahar",
                      },
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <li
                                                            class="chatMessage"
                              >
                                                            <div
                                                                                          class="ui image label"
                                                            >
                                                                                          <img
                                                                                                                        alt="user Avatar"
                                                                                          />
                                                                                          <span
                                                                                                                        class="userName"
                                                                                          />
                                                                                          : 
                                                            </div>
                              </li>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "message": Object {
                                                                                                        "avatar": "avatar",
                                                                                                        "isOwner": true,
                                                                                                        "text": "text",
                                                                                                        "username": "shahar",
                                                                                                      },
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "message": Object {
                                                                                                        "avatar": "avatar",
                                                                                                        "isOwner": true,
                                                                                                        "text": "text",
                                                                                                        "username": "shahar",
                                                                                                      },
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "message": Object {
                                                                                      "avatar": "avatar",
                                                                                      "isOwner": true,
                                                                                      "text": "text",
                                                                                      "username": "shahar",
                                                                                    },
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <li
                                                        class="chatMessage"
                            >
                                                        <div
                                                                                    class="ui image label"
                                                        >
                                                                                    <img
                                                                                                                alt="user Avatar"
                                                                                    />
                                                                                    <span
                                                                                                                class="userName"
                                                                                    />
                                                                                    : 
                                                        </div>
                            </li>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": Object {
                    "fileName": "E:\\\\demo-chat-boilerplate\\\\src\\\\components\\\\presentional\\\\Message.jsx",
                    "lineNumber": 11,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "user Avatar",
                    "src": undefined,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <li
                                                                class="chatMessage"
                                >
                                                                <div
                                                                                                class="ui image label"
                                                                >
                                                                                                <img
                                                                                                                                alt="user Avatar"
                                                                                                />
                                                                                                <span
                                                                                                                                class="userName"
                                                                                                />
                                                                                                : 
                                                                </div>
                                </li>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "message": Object {
                                                                                                              "avatar": "avatar",
                                                                                                              "isOwner": true,
                                                                                                              "text": "text",
                                                                                                              "username": "shahar",
                                                                                                            },
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "message": Object {
                                                                                                              "avatar": "avatar",
                                                                                                              "isOwner": true,
                                                                                                              "text": "text",
                                                                                                              "username": "shahar",
                                                                                                            },
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "message": Object {
                                                                                            "avatar": "avatar",
                                                                                            "isOwner": true,
                                                                                            "text": "text",
                                                                                            "username": "shahar",
                                                                                          },
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <li
                                                            class="chatMessage"
                              >
                                                            <div
                                                                                          class="ui image label"
                                                            >
                                                                                          <img
                                                                                                                        alt="user Avatar"
                                                                                          />
                                                                                          <span
                                                                                                                        class="userName"
                                                                                          />
                                                                                          : 
                                                            </div>
                              </li>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "message": Object {
                                "avatar": "avatar",
                                "isOwner": true,
                                "text": "text",
                                "username": "shahar",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "message": Object {
                                "avatar": "avatar",
                                "isOwner": true,
                                "text": "text",
                                "username": "shahar",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "E:\\\\demo-chat-boilerplate\\\\src\\\\components\\\\presentional\\\\Message.jsx",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <Label
                            image={true}
>
                            <img
                                                        alt="user Avatar"
                                                        src={undefined}
                            />
                            <span
                                                        className="userName"
                            />
                            : 
</Label>,
                          "className": "chatMessage",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <li
                          class="chatMessage"
>
                          <div
                                                    class="ui image label"
                          >
                                                    <img
                                                                              alt="user Avatar"
                                                    />
                                                    <span
                                                                              class="userName"
                                                    />
                                                    : 
                          </div>
</li>,
                        "tag": 5,
                        "type": "li",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <li
                                                                class="chatMessage"
                                >
                                                                <div
                                                                                                class="ui image label"
                                                                >
                                                                                                <img
                                                                                                                                alt="user Avatar"
                                                                                                />
                                                                                                <span
                                                                                                                                class="userName"
                                                                                                />
                                                                                                : 
                                                                </div>
                                </li>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "message": Object {
                                                                                                              "avatar": "avatar",
                                                                                                              "isOwner": true,
                                                                                                              "text": "text",
                                                                                                              "username": "shahar",
                                                                                                            },
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "message": Object {
                                                                                                              "avatar": "avatar",
                                                                                                              "isOwner": true,
                                                                                                              "text": "text",
                                                                                                              "username": "shahar",
                                                                                                            },
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "message": Object {
                                                                                            "avatar": "avatar",
                                                                                            "isOwner": true,
                                                                                            "text": "text",
                                                                                            "username": "shahar",
                                                                                          },
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <li
                                                            class="chatMessage"
                              >
                                                            <div
                                                                                          class="ui image label"
                                                            >
                                                                                          <img
                                                                                                                        alt="user Avatar"
                                                                                          />
                                                                                          <span
                                                                                                                        class="userName"
                                                                                          />
                                                                                          : 
                                                            </div>
                              </li>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "message": Object {
                                "avatar": "avatar",
                                "isOwner": true,
                                "text": "text",
                                "username": "shahar",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "message": Object {
                                "avatar": "avatar",
                                "isOwner": true,
                                "text": "text",
                                "username": "shahar",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "E:\\\\demo-chat-boilerplate\\\\src\\\\components\\\\presentional\\\\Message.jsx",
                      "lineNumber": 12,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": undefined,
                      "className": "userName",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": ": ",
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": : ,
                      "tag": 6,
                      "type": null,
                      "updateQueue": null,
                    },
                    "stateNode": <span
                      class="userName"
/>,
                    "tag": 5,
                    "type": "span",
                    "updateQueue": null,
                  },
                  "stateNode": <img
                    alt="user Avatar"
/>,
                  "tag": 5,
                  "type": "img",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <img
                      alt="user Avatar"
                      src={undefined}
/>,
                    <span
                      className="userName"
/>,
                    ": ",
                    undefined,
                  ],
                  "className": "ui image label",
                  "onClick": [Function],
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="ui image label"
>
                  <img
                                    alt="user Avatar"
                  />
                  <span
                                    class="userName"
                  />
                  : 
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <img
                    alt="user Avatar"
                    src={undefined}
/>,
                  <span
                    className="userName"
/>,
                  ": ",
                  undefined,
                ],
                "image": true,
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 5,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 4,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <li
                                                        class="chatMessage"
                            >
                                                        <div
                                                                                    class="ui image label"
                                                        >
                                                                                    <img
                                                                                                                alt="user Avatar"
                                                                                    />
                                                                                    <span
                                                                                                                class="userName"
                                                                                    />
                                                                                    : 
                                                        </div>
                            </li>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "message": Object {
                                                                                                  "avatar": "avatar",
                                                                                                  "isOwner": true,
                                                                                                  "text": "text",
                                                                                                  "username": "shahar",
                                                                                                },
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "message": Object {
                                                                                                  "avatar": "avatar",
                                                                                                  "isOwner": true,
                                                                                                  "text": "text",
                                                                                                  "username": "shahar",
                                                                                                },
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "message": Object {
                                                                                "avatar": "avatar",
                                                                                "isOwner": true,
                                                                                "text": "text",
                                                                                "username": "shahar",
                                                                              },
                                                                            }
                          }
/>,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <li
                                                    class="chatMessage"
                          >
                                                    <div
                                                                              class="ui image label"
                                                    >
                                                                              <img
                                                                                                        alt="user Avatar"
                                                                              />
                                                                              <span
                                                                                                        class="userName"
                                                                              />
                                                                              : 
                                                    </div>
                          </li>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "message": Object {
                      "avatar": "avatar",
                      "isOwner": true,
                      "text": "text",
                      "username": "shahar",
                    },
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <li
                                                        class="chatMessage"
                            >
                                                        <div
                                                                                    class="ui image label"
                                                        >
                                                                                    <img
                                                                                                                alt="user Avatar"
                                                                                    />
                                                                                    <span
                                                                                                                class="userName"
                                                                                    />
                                                                                    : 
                                                        </div>
                            </li>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "message": Object {
                                                                                                  "avatar": "avatar",
                                                                                                  "isOwner": true,
                                                                                                  "text": "text",
                                                                                                  "username": "shahar",
                                                                                                },
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "message": Object {
                                                                                                  "avatar": "avatar",
                                                                                                  "isOwner": true,
                                                                                                  "text": "text",
                                                                                                  "username": "shahar",
                                                                                                },
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "message": Object {
                                                                                "avatar": "avatar",
                                                                                "isOwner": true,
                                                                                "text": "text",
                                                                                "username": "shahar",
                                                                              },
                                                                            }
                          }
/>,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <li
                                                    class="chatMessage"
                          >
                                                    <div
                                                                              class="ui image label"
                                                    >
                                                                              <img
                                                                                                        alt="user Avatar"
                                                                              />
                                                                              <span
                                                                                                        class="userName"
                                                                              />
                                                                              : 
                                                    </div>
                          </li>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": Object {
                  "fileName": "E:\\\\demo-chat-boilerplate\\\\src\\\\components\\\\presentional\\\\Message.jsx",
                  "lineNumber": 9,
                },
                "alternate": null,
                "child": [Circular],
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <Label
                    image={true}
>
                    <img
                                        alt="user Avatar"
                                        src={undefined}
                    />
                    <span
                                        className="userName"
                    />
                    : 
</Label>,
                  "className": "chatMessage",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 4,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <li
                                                        class="chatMessage"
                            >
                                                        <div
                                                                                    class="ui image label"
                                                        >
                                                                                    <img
                                                                                                                alt="user Avatar"
                                                                                    />
                                                                                    <span
                                                                                                                class="userName"
                                                                                    />
                                                                                    : 
                                                        </div>
                            </li>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "message": Object {
                                                                                                  "avatar": "avatar",
                                                                                                  "isOwner": true,
                                                                                                  "text": "text",
                                                                                                  "username": "shahar",
                                                                                                },
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "message": Object {
                                                                                                  "avatar": "avatar",
                                                                                                  "isOwner": true,
                                                                                                  "text": "text",
                                                                                                  "username": "shahar",
                                                                                                },
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "message": Object {
                                                                                "avatar": "avatar",
                                                                                "isOwner": true,
                                                                                "text": "text",
                                                                                "username": "shahar",
                                                                              },
                                                                            }
                          }
/>,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <li
                                                    class="chatMessage"
                          >
                                                    <div
                                                                              class="ui image label"
                                                    >
                                                                              <img
                                                                                                        alt="user Avatar"
                                                                              />
                                                                              <span
                                                                                                        class="userName"
                                                                              />
                                                                              : 
                                                    </div>
                          </li>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "message": Object {
                      "avatar": "avatar",
                      "isOwner": true,
                      "text": "text",
                      "username": "shahar",
                    },
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <li
                                                        class="chatMessage"
                            >
                                                        <div
                                                                                    class="ui image label"
                                                        >
                                                                                    <img
                                                                                                                alt="user Avatar"
                                                                                    />
                                                                                    <span
                                                                                                                class="userName"
                                                                                    />
                                                                                    : 
                                                        </div>
                            </li>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "message": Object {
                                                                                                  "avatar": "avatar",
                                                                                                  "isOwner": true,
                                                                                                  "text": "text",
                                                                                                  "username": "shahar",
                                                                                                },
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "message": Object {
                                                                                                  "avatar": "avatar",
                                                                                                  "isOwner": true,
                                                                                                  "text": "text",
                                                                                                  "username": "shahar",
                                                                                                },
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "message": Object {
                                                                                "avatar": "avatar",
                                                                                "isOwner": true,
                                                                                "text": "text",
                                                                                "username": "shahar",
                                                                              },
                                                                            }
                          }
/>,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <li
                                                    class="chatMessage"
                          >
                                                    <div
                                                                              class="ui image label"
                                                    >
                                                                              <img
                                                                                                        alt="user Avatar"
                                                                              />
                                                                              <span
                                                                                                        class="userName"
                                                                              />
                                                                              : 
                                                    </div>
                          </li>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": <li
                  class="chatMessage"
>
                  <div
                                    class="ui image label"
                  >
                                    <img
                                                      alt="user Avatar"
                                    />
                                    <span
                                                      class="userName"
                                    />
                                    : 
                  </div>
</li>,
                "tag": 5,
                "type": "li",
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": [Circular],
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "_reactInternalInstance": Object {},
            "context": Object {},
            "handleClick": [Function],
            "handleIconOverrides": [Function],
            "props": Object {
              "children": Array [
                <img
                  alt="user Avatar"
                  src={undefined}
/>,
                <span
                  className="userName"
/>,
                ": ",
                undefined,
              ],
              "image": true,
            },
            "refs": Object {},
            "state": null,
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <img
                alt="user Avatar"
                src={undefined}
/>,
              <span
                className="userName"
/>,
              ": ",
              undefined,
            ],
            "image": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": <div
              class="ui image label"
>
              <img
                            alt="user Avatar"
              />
              <span
                            class="userName"
              />
              : 
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  alt="user Avatar"
                  src={undefined}
/>,
                <span
                  className="userName"
/>,
                ": ",
                undefined,
              ],
              "className": "ui image label",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <img
                  alt="user Avatar"
/>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "user Avatar",
                  "src": undefined,
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "img",
              },
              Object {
                "instance": <span
                  class="userName"
/>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "userName",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "span",
              },
              ": ",
            ],
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": "li",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "message": Object {
          "avatar": "avatar",
          "isOwner": true,
          "text": "text",
          "username": "shahar",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": <li
          class="chatMessage"
>
          <div
                    class="ui image label"
          >
                    <img
                              alt="user Avatar"
                    />
                    <span
                              class="userName"
                    />
                    : 
          </div>
</li>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Label
            image={true}
>
            <img
                        alt="user Avatar"
                        src={undefined}
            />
            <span
                        className="userName"
            />
            : 
</Label>,
          "className": "chatMessage",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": Label {
              "_reactInternalFiber": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 4,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <li
                                                        class="chatMessage"
                            >
                                                        <div
                                                                                    class="ui image label"
                                                        >
                                                                                    <img
                                                                                                                alt="user Avatar"
                                                                                    />
                                                                                    <span
                                                                                                                class="userName"
                                                                                    />
                                                                                    : 
                                                        </div>
                            </li>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "message": Object {
                                                                                                  "avatar": "avatar",
                                                                                                  "isOwner": true,
                                                                                                  "text": "text",
                                                                                                  "username": "shahar",
                                                                                                },
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "message": Object {
                                                                                                  "avatar": "avatar",
                                                                                                  "isOwner": true,
                                                                                                  "text": "text",
                                                                                                  "username": "shahar",
                                                                                                },
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "message": Object {
                                                                                "avatar": "avatar",
                                                                                "isOwner": true,
                                                                                "text": "text",
                                                                                "username": "shahar",
                                                                              },
                                                                            }
                          }
/>,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <li
                                                    class="chatMessage"
                          >
                                                    <div
                                                                              class="ui image label"
                                                    >
                                                                              <img
                                                                                                        alt="user Avatar"
                                                                              />
                                                                              <span
                                                                                                        class="userName"
                                                                              />
                                                                              : 
                                                    </div>
                          </li>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "E:\\\\demo-chat-boilerplate\\\\src\\\\components\\\\presentional\\\\Message.jsx",
                      "lineNumber": 9,
                    },
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <Label
                        image={true}
>
                        <img
                                                alt="user Avatar"
                                                src={undefined}
                        />
                        <span
                                                className="userName"
                        />
                        : 
</Label>,
                      "className": "chatMessage",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <li
                      class="chatMessage"
>
                      <div
                                            class="ui image label"
                      >
                                            <img
                                                                  alt="user Avatar"
                                            />
                                            <span
                                                                  class="userName"
                                            />
                                            : 
                      </div>
</li>,
                    "tag": 5,
                    "type": "li",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "message": Object {
                      "avatar": "avatar",
                      "isOwner": true,
                      "text": "text",
                      "username": "shahar",
                    },
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <li
                                                        class="chatMessage"
                            >
                                                        <div
                                                                                    class="ui image label"
                                                        >
                                                                                    <img
                                                                                                                alt="user Avatar"
                                                                                    />
                                                                                    <span
                                                                                                                class="userName"
                                                                                    />
                                                                                    : 
                                                        </div>
                            </li>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "message": Object {
                                                                                                  "avatar": "avatar",
                                                                                                  "isOwner": true,
                                                                                                  "text": "text",
                                                                                                  "username": "shahar",
                                                                                                },
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "message": Object {
                                                                                                  "avatar": "avatar",
                                                                                                  "isOwner": true,
                                                                                                  "text": "text",
                                                                                                  "username": "shahar",
                                                                                                },
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "message": Object {
                                                                                "avatar": "avatar",
                                                                                "isOwner": true,
                                                                                "text": "text",
                                                                                "username": "shahar",
                                                                              },
                                                                            }
                          }
/>,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <li
                                                    class="chatMessage"
                          >
                                                    <div
                                                                              class="ui image label"
                                                    >
                                                                              <img
                                                                                                        alt="user Avatar"
                                                                              />
                                                                              <span
                                                                                                        class="userName"
                                                                              />
                                                                              : 
                                                    </div>
                          </li>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": Object {
                  "fileName": "E:\\\\demo-chat-boilerplate\\\\src\\\\components\\\\presentional\\\\Message.jsx",
                  "lineNumber": 10,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <li
                                                                class="chatMessage"
                                >
                                                                <div
                                                                                                class="ui image label"
                                                                >
                                                                                                <img
                                                                                                                                alt="user Avatar"
                                                                                                />
                                                                                                <span
                                                                                                                                class="userName"
                                                                                                />
                                                                                                : 
                                                                </div>
                                </li>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "message": Object {
                                                                                                              "avatar": "avatar",
                                                                                                              "isOwner": true,
                                                                                                              "text": "text",
                                                                                                              "username": "shahar",
                                                                                                            },
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "message": Object {
                                                                                                              "avatar": "avatar",
                                                                                                              "isOwner": true,
                                                                                                              "text": "text",
                                                                                                              "username": "shahar",
                                                                                                            },
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "message": Object {
                                                                                            "avatar": "avatar",
                                                                                            "isOwner": true,
                                                                                            "text": "text",
                                                                                            "username": "shahar",
                                                                                          },
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <li
                                                            class="chatMessage"
                              >
                                                            <div
                                                                                          class="ui image label"
                                                            >
                                                                                          <img
                                                                                                                        alt="user Avatar"
                                                                                          />
                                                                                          <span
                                                                                                                        class="userName"
                                                                                          />
                                                                                          : 
                                                            </div>
                              </li>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "message": Object {
                                "avatar": "avatar",
                                "isOwner": true,
                                "text": "text",
                                "username": "shahar",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "message": Object {
                                "avatar": "avatar",
                                "isOwner": true,
                                "text": "text",
                                "username": "shahar",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "E:\\\\demo-chat-boilerplate\\\\src\\\\components\\\\presentional\\\\Message.jsx",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <Label
                            image={true}
>
                            <img
                                                        alt="user Avatar"
                                                        src={undefined}
                            />
                            <span
                                                        className="userName"
                            />
                            : 
</Label>,
                          "className": "chatMessage",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <li
                          class="chatMessage"
>
                          <div
                                                    class="ui image label"
                          >
                                                    <img
                                                                              alt="user Avatar"
                                                    />
                                                    <span
                                                                              class="userName"
                                                    />
                                                    : 
                          </div>
</li>,
                        "tag": 5,
                        "type": "li",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "message": Object {
                          "avatar": "avatar",
                          "isOwner": true,
                          "text": "text",
                          "username": "shahar",
                        },
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <li
                                                                class="chatMessage"
                                >
                                                                <div
                                                                                                class="ui image label"
                                                                >
                                                                                                <img
                                                                                                                                alt="user Avatar"
                                                                                                />
                                                                                                <span
                                                                                                                                class="userName"
                                                                                                />
                                                                                                : 
                                                                </div>
                                </li>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "message": Object {
                                                                                                              "avatar": "avatar",
                                                                                                              "isOwner": true,
                                                                                                              "text": "text",
                                                                                                              "username": "shahar",
                                                                                                            },
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "message": Object {
                                                                                                              "avatar": "avatar",
                                                                                                              "isOwner": true,
                                                                                                              "text": "text",
                                                                                                              "username": "shahar",
                                                                                                            },
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "message": Object {
                                                                                            "avatar": "avatar",
                                                                                            "isOwner": true,
                                                                                            "text": "text",
                                                                                            "username": "shahar",
                                                                                          },
                                                                                        }
                              }
/>,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <li
                                                            class="chatMessage"
                              >
                                                            <div
                                                                                          class="ui image label"
                                                            >
                                                                                          <img
                                                                                                                        alt="user Avatar"
                                                                                          />
                                                                                          <span
                                                                                                                        class="userName"
                                                                                          />
                                                                                          : 
                                                            </div>
                              </li>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "message": Object {
                                "avatar": "avatar",
                                "isOwner": true,
                                "text": "text",
                                "username": "shahar",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "message": Object {
                                "avatar": "avatar",
                                "isOwner": true,
                                "text": "text",
                                "username": "shahar",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "E:\\\\demo-chat-boilerplate\\\\src\\\\components\\\\presentional\\\\Message.jsx",
                      "lineNumber": 11,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "user Avatar",
                      "src": undefined,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "message": Object {
                                "avatar": "avatar",
                                "isOwner": true,
                                "text": "text",
                                "username": "shahar",
                              },
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "message": Object {
                                "avatar": "avatar",
                                "isOwner": true,
                                "text": "text",
                                "username": "shahar",
                              },
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <li
                                                                    class="chatMessage"
                                  >
                                                                    <div
                                                                                                      class="ui image label"
                                                                    >
                                                                                                      <img
                                                                                                                                        alt="user Avatar"
                                                                                                      />
                                                                                                      <span
                                                                                                                                        class="userName"
                                                                                                      />
                                                                                                      : 
                                                                    </div>
                                  </li>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "message": Object {
                                                                                                                    "avatar": "avatar",
                                                                                                                    "isOwner": true,
                                                                                                                    "text": "text",
                                                                                                                    "username": "shahar",
                                                                                                                  },
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "message": Object {
                                                                                                                    "avatar": "avatar",
                                                                                                                    "isOwner": true,
                                                                                                                    "text": "text",
                                                                                                                    "username": "shahar",
                                                                                                                  },
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "message": Object {
                                                                                                  "avatar": "avatar",
                                                                                                  "isOwner": true,
                                                                                                  "text": "text",
                                                                                                  "username": "shahar",
                                                                                                },
                                                                                              }
                                }
/>,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <li
                                                                class="chatMessage"
                                >
                                                                <div
                                                                                                class="ui image label"
                                                                >
                                                                                                <img
                                                                                                                                alt="user Avatar"
                                                                                                />
                                                                                                <span
                                                                                                                                class="userName"
                                                                                                />
                                                                                                : 
                                                                </div>
                                </li>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "message": Object {
                                  "avatar": "avatar",
                                  "isOwner": true,
                                  "text": "text",
                                  "username": "shahar",
                                },
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "message": Object {
                                  "avatar": "avatar",
                                  "isOwner": true,
                                  "text": "text",
                                  "username": "shahar",
                                },
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 5,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "E:\\\\demo-chat-boilerplate\\\\src\\\\components\\\\presentional\\\\Message.jsx",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <Label
                              image={true}
>
                              <img
                                                            alt="user Avatar"
                                                            src={undefined}
                              />
                              <span
                                                            className="userName"
                              />
                              : 
</Label>,
                            "className": "chatMessage",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <li
                            class="chatMessage"
>
                            <div
                                                        class="ui image label"
                            >
                                                        <img
                                                                                    alt="user Avatar"
                                                        />
                                                        <span
                                                                                    class="userName"
                                                        />
                                                        : 
                            </div>
</li>,
                          "tag": 5,
                          "type": "li",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "message": Object {
                                "avatar": "avatar",
                                "isOwner": true,
                                "text": "text",
                                "username": "shahar",
                              },
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "message": Object {
                                "avatar": "avatar",
                                "isOwner": true,
                                "text": "text",
                                "username": "shahar",
                              },
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <li
                                                                    class="chatMessage"
                                  >
                                                                    <div
                                                                                                      class="ui image label"
                                                                    >
                                                                                                      <img
                                                                                                                                        alt="user Avatar"
                                                                                                      />
                                                                                                      <span
                                                                                                                                        class="userName"
                                                                                                      />
                                                                                                      : 
                                                                    </div>
                                  </li>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "message": Object {
                                                                                                                    "avatar": "avatar",
                                                                                                                    "isOwner": true,
                                                                                                                    "text": "text",
                                                                                                                    "username": "shahar",
                                                                                                                  },
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "message": Object {
                                                                                                                    "avatar": "avatar",
                                                                                                                    "isOwner": true,
                                                                                                                    "text": "text",
                                                                                                                    "username": "shahar",
                                                                                                                  },
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "message": Object {
                                                                                                  "avatar": "avatar",
                                                                                                  "isOwner": true,
                                                                                                  "text": "text",
                                                                                                  "username": "shahar",
                                                                                                },
                                                                                              }
                                }
/>,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <li
                                                                class="chatMessage"
                                >
                                                                <div
                                                                                                class="ui image label"
                                                                >
                                                                                                <img
                                                                                                                                alt="user Avatar"
                                                                                                />
                                                                                                <span
                                                                                                                                class="userName"
                                                                                                />
                                                                                                : 
                                                                </div>
                                </li>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "message": Object {
                                  "avatar": "avatar",
                                  "isOwner": true,
                                  "text": "text",
                                  "username": "shahar",
                                },
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "message": Object {
                                  "avatar": "avatar",
                                  "isOwner": true,
                                  "text": "text",
                                  "username": "shahar",
                                },
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "E:\\\\demo-chat-boilerplate\\\\src\\\\components\\\\presentional\\\\Message.jsx",
                        "lineNumber": 12,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": undefined,
                        "className": "userName",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 10,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 2,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": ": ",
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": : ,
                        "tag": 6,
                        "type": null,
                        "updateQueue": null,
                      },
                      "stateNode": <span
                        class="userName"
/>,
                      "tag": 5,
                      "type": "span",
                      "updateQueue": null,
                    },
                    "stateNode": <img
                      alt="user Avatar"
/>,
                    "tag": 5,
                    "type": "img",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <img
                        alt="user Avatar"
                        src={undefined}
/>,
                      <span
                        className="userName"
/>,
                      ": ",
                      undefined,
                    ],
                    "className": "ui image label",
                    "onClick": [Function],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="ui image label"
>
                    <img
                                        alt="user Avatar"
                    />
                    <span
                                        class="userName"
                    />
                    : 
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <img
                      alt="user Avatar"
                      src={undefined}
/>,
                    <span
                      className="userName"
/>,
                    ": ",
                    undefined,
                  ],
                  "image": true,
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <li
                                                            class="chatMessage"
                              >
                                                            <div
                                                                                          class="ui image label"
                                                            >
                                                                                          <img
                                                                                                                        alt="user Avatar"
                                                                                          />
                                                                                          <span
                                                                                                                        class="userName"
                                                                                          />
                                                                                          : 
                                                            </div>
                              </li>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "message": Object {
                                                                                                        "avatar": "avatar",
                                                                                                        "isOwner": true,
                                                                                                        "text": "text",
                                                                                                        "username": "shahar",
                                                                                                      },
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "message": Object {
                                                                                                        "avatar": "avatar",
                                                                                                        "isOwner": true,
                                                                                                        "text": "text",
                                                                                                        "username": "shahar",
                                                                                                      },
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "message": Object {
                                                                                      "avatar": "avatar",
                                                                                      "isOwner": true,
                                                                                      "text": "text",
                                                                                      "username": "shahar",
                                                                                    },
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <li
                                                        class="chatMessage"
                            >
                                                        <div
                                                                                    class="ui image label"
                                                        >
                                                                                    <img
                                                                                                                alt="user Avatar"
                                                                                    />
                                                                                    <span
                                                                                                                class="userName"
                                                                                    />
                                                                                    : 
                                                        </div>
                            </li>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "message": Object {
                        "avatar": "avatar",
                        "isOwner": true,
                        "text": "text",
                        "username": "shahar",
                      },
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <li
                                                            class="chatMessage"
                              >
                                                            <div
                                                                                          class="ui image label"
                                                            >
                                                                                          <img
                                                                                                                        alt="user Avatar"
                                                                                          />
                                                                                          <span
                                                                                                                        class="userName"
                                                                                          />
                                                                                          : 
                                                            </div>
                              </li>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "message": Object {
                                                                                                        "avatar": "avatar",
                                                                                                        "isOwner": true,
                                                                                                        "text": "text",
                                                                                                        "username": "shahar",
                                                                                                      },
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "message": Object {
                                                                                                        "avatar": "avatar",
                                                                                                        "isOwner": true,
                                                                                                        "text": "text",
                                                                                                        "username": "shahar",
                                                                                                      },
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "message": Object {
                                                                                      "avatar": "avatar",
                                                                                      "isOwner": true,
                                                                                      "text": "text",
                                                                                      "username": "shahar",
                                                                                    },
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <li
                                                        class="chatMessage"
                            >
                                                        <div
                                                                                    class="ui image label"
                                                        >
                                                                                    <img
                                                                                                                alt="user Avatar"
                                                                                    />
                                                                                    <span
                                                                                                                class="userName"
                                                                                    />
                                                                                    : 
                                                        </div>
                            </li>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": Object {
                    "fileName": "E:\\\\demo-chat-boilerplate\\\\src\\\\components\\\\presentional\\\\Message.jsx",
                    "lineNumber": 9,
                  },
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <Label
                      image={true}
>
                      <img
                                            alt="user Avatar"
                                            src={undefined}
                      />
                      <span
                                            className="userName"
                      />
                      : 
</Label>,
                    "className": "chatMessage",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <li
                                                            class="chatMessage"
                              >
                                                            <div
                                                                                          class="ui image label"
                                                            >
                                                                                          <img
                                                                                                                        alt="user Avatar"
                                                                                          />
                                                                                          <span
                                                                                                                        class="userName"
                                                                                          />
                                                                                          : 
                                                            </div>
                              </li>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "message": Object {
                                                                                                        "avatar": "avatar",
                                                                                                        "isOwner": true,
                                                                                                        "text": "text",
                                                                                                        "username": "shahar",
                                                                                                      },
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "message": Object {
                                                                                                        "avatar": "avatar",
                                                                                                        "isOwner": true,
                                                                                                        "text": "text",
                                                                                                        "username": "shahar",
                                                                                                      },
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "message": Object {
                                                                                      "avatar": "avatar",
                                                                                      "isOwner": true,
                                                                                      "text": "text",
                                                                                      "username": "shahar",
                                                                                    },
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <li
                                                        class="chatMessage"
                            >
                                                        <div
                                                                                    class="ui image label"
                                                        >
                                                                                    <img
                                                                                                                alt="user Avatar"
                                                                                    />
                                                                                    <span
                                                                                                                class="userName"
                                                                                    />
                                                                                    : 
                                                        </div>
                            </li>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "message": Object {
                        "avatar": "avatar",
                        "isOwner": true,
                        "text": "text",
                        "username": "shahar",
                      },
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "message": Object {
                            "avatar": "avatar",
                            "isOwner": true,
                            "text": "text",
                            "username": "shahar",
                          },
                        },
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <li
                                                            class="chatMessage"
                              >
                                                            <div
                                                                                          class="ui image label"
                                                            >
                                                                                          <img
                                                                                                                        alt="user Avatar"
                                                                                          />
                                                                                          <span
                                                                                                                        class="userName"
                                                                                          />
                                                                                          : 
                                                            </div>
                              </li>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "message": Object {
                                                                                                        "avatar": "avatar",
                                                                                                        "isOwner": true,
                                                                                                        "text": "text",
                                                                                                        "username": "shahar",
                                                                                                      },
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "message": Object {
                                                                                                        "avatar": "avatar",
                                                                                                        "isOwner": true,
                                                                                                        "text": "text",
                                                                                                        "username": "shahar",
                                                                                                      },
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "message": Object {
                                                                                      "avatar": "avatar",
                                                                                      "isOwner": true,
                                                                                      "text": "text",
                                                                                      "username": "shahar",
                                                                                    },
                                                                                  }
                            }
/>,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <li
                                                        class="chatMessage"
                            >
                                                        <div
                                                                                    class="ui image label"
                                                        >
                                                                                    <img
                                                                                                                alt="user Avatar"
                                                                                    />
                                                                                    <span
                                                                                                                class="userName"
                                                                                    />
                                                                                    : 
                                                        </div>
                            </li>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "message": Object {
                              "avatar": "avatar",
                              "isOwner": true,
                              "text": "text",
                              "username": "shahar",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": <li
                    class="chatMessage"
>
                    <div
                                        class="ui image label"
                    >
                                        <img
                                                            alt="user Avatar"
                                        />
                                        <span
                                                            class="userName"
                                        />
                                        : 
                    </div>
</li>,
                  "tag": 5,
                  "type": "li",
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": [Circular],
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_reactInternalInstance": Object {},
              "context": Object {},
              "handleClick": [Function],
              "handleIconOverrides": [Function],
              "props": Object {
                "children": Array [
                  <img
                    alt="user Avatar"
                    src={undefined}
/>,
                  <span
                    className="userName"
/>,
                  ": ",
                  undefined,
                ],
                "image": true,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <img
                  alt="user Avatar"
                  src={undefined}
/>,
                <span
                  className="userName"
/>,
                ": ",
                undefined,
              ],
              "image": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": <div
                class="ui image label"
>
                <img
                                alt="user Avatar"
                />
                <span
                                class="userName"
                />
                : 
</div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <img
                    alt="user Avatar"
                    src={undefined}
/>,
                  <span
                    className="userName"
/>,
                  ": ",
                  undefined,
                ],
                "className": "ui image label",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <img
                    alt="user Avatar"
/>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "user Avatar",
                    "src": undefined,
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                  ],
                  "type": "img",
                },
                Object {
                  "instance": <span
                    class="userName"
/>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "userName",
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                  ],
                  "type": "span",
                },
                ": ",
              ],
              "type": "div",
            },
            "type": [Function],
          },
        ],
        "type": "li",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
